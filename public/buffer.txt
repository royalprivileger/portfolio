import { motion } from "framer-motion";

export default function About() {
  
  
    const fadeIn = {
    hidden: { opacity: 0, x: -50 },
    visible: {
      opacity: 1,
      x: 0,
      transition: { duration: 0.6, ease: "easeOut" },
    },
  };
  
  
  const timelineItems = [
    {
      title: "SDE - I",
      date: "Jio Platforms LTD | Mar, 2023 - Jul, 2024",
      description: "Add description here",
    },
    {
      title: "Assistant Manager",
      date: "Jio Platforms LTD | Aug, 2021 - Mar, 2023",
      description: "Add description here",
    },
    {
      title: "Bachelor of Engineering - EXTC",
      date: "Pillai College of Engineering, Mumbai University | 2017 - 2021",
      description:
        "I completed my Bachelor's in Electronics and Telecommunication with strong fundamentals in signal processing and embedded systems.",
    },
    {
      title: "Internship - BSNL Satellite Training",
      date: "Winter 2022",
      description:
        "Learned about satellite communication, fiber optics, and core telecom technologies at BSNL Yeoor training center.",
    },
    {
      title: "Skills & Technologies",
      description:
        "ReactJS, HTML, CSS, JavaScript, Python, SQL, Git, Agile methodologies, and more.",
    },
  ];

  return (
    <section id="about" className="py-20 bg-gray-50 text-gray-800">
      <div className="max-w-6xl mx-auto px-4">
        <h2 className="text-3xl font-bold text-center mb-16">About Me</h2>

        <div className="relative">
          {/* Vertical Line */}
          <div className="absolute left-1/2 transform -translate-x-1/2 h-full w-1 bg-indigo-600"></div>

          <div className="space-y-16">
            {timelineItems.map((item, index) => {
              const isLeft = index % 2 === 0;
              return (
                <motion.div
                  key={index}
                  // className={`relative flex items-start justify-between ${
                  //   index % 2 === 0 ? "flex-row" : "flex-row-reverse"
                  // }`}
                  className={`mb-12 w-full flex justify-${
                    isLeft ? "start" : "end"
                  } relative`}
                  variants={fadeIn}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: true, amount: 0.3 }}
                >
                  {/* Content Box */}
                  <div className="w-[47%] bg-white shadow-lg p-6 rounded-md z-10">
                    <h3 className="text-xl font-semibold mb-1">{item.title}</h3>
                    {item.date && (
                      <p className="text-sm text-gray-500 mb-2">{item.date}</p>
                    )}
                    <p>{item.description}</p>
                  </div>

                  {/* Timeline Dot */}
                  <div className="w-6 h-6 bg-indigo-600 rounded-full border-4 border-white z-20 absolute top-4 left-1/2 transform -translate-x-1/2"></div>
                </motion.div>
              );
            })}
          </div>
        </div>
      </div>
    </section>
  );
}



data

  const timelineItems = [
    {
      title: "SDE - I",
      date: "Jio Platforms LTD | Mar, 2023 - Jul, 2024",
      description: "Add description here",
    },
    {
      title: "Assistant Manager",
      date: "Jio Platforms LTD | Aug, 2021 - Mar, 2023",
      description: "Add description here",
    },
    {
      title: "Bachelor of Engineering - EXTC",
      date: "Pillai College of Engineering, Mumbai University | 2017 - 2021",
      description:
        "I completed my Bachelor's in Electronics and Telecommunication with strong fundamentals in signal processing and embedded systems.",
    },
    {
      title: "Internship - BSNL Satellite Training",
      date: "Winter 2022",
      description:
        "Learned about satellite communication, fiber optics, and core telecom technologies at BSNL Yeoor training center.",
    },
    {
      title: "Skills & Technologies",
      description:
        "ReactJS, HTML, CSS, JavaScript, Python, SQL, Git, Agile methodologies, and more.",
    },
  ];



  ${isLeft ? "bl" : "br"}





  <motion.div

                  key={index}
                  className={`relative flex items-start justify-between ${isLeft ? "flex-row" : "flex-row-reverse"}`}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: false, amount: 0.3 }}
                  variants={isLeft ? fadeRight : fadeLeft}
                >
                  {/* Content Box */}
                  <div className={`w-[47%] bg-gradient-to-${isLeft ? "bl" : "br"} from-white to-indigo-300 shadow-lg p-6 rounded-md z-10`}>
                    <h3 className="text-xl font-semibold mb-1">{item.title}</h3>
                    {item.date && (
                      <p className="text-sm text-gray-500 mb-2">{item.date}</p>
                    )}
                    <p>{item.description}</p>
                  </div>

                  {/* Timeline Dot */}
                  <div className="w-6 h-6 bg-indigo-600 rounded-full border-4 border-white z-20 absolute top-4 left-1/2 transform -translate-x-1/2"></div>
                  
</motion.div>

modal right
                          {/*Modal right*/}
                          <AnimatePresence>
                            {selectedItem?.title === item.title && (
                              <div
                                className={`w-[47%] bg-gradient-to-br from-white to-indigo-300 shadow-lg p-6 rounded-md z-10 ${
                                  selectedItem?.title === item.title
                                    ? ""
                                    : selectedItem
                                    ? "blur-sm"
                                    : ""
                                }`}
                              >
                                <h3 className="text-xl font-semibold mb-1">
                                  {item.title}
                                </h3>
                                {item.date && (
                                  <p className="text-sm text-gray-500 mb-2">
                                    {item.date}
                                    <AnimatePresence>
                                      {selectedItem?.title === item.title && (
                                        <motion.span
                                          initial={{ opacity: 0, x: 5 }}
                                          animate={{ opacity: 1, x: 0 }}
                                          exit={{ opacity: 0, x: 5 }}
                                          transition={{ duration: 0.3 }}
                                          className="ml-1"
                                        >
                                          | {item.showDate}
                                        </motion.span>
                                      )}
                                    </AnimatePresence>
                                  </p>
                                )}
                                <p>{item.description}</p>
                              </div>
                            )}
                          </AnimatePresence>

modal left

                            {/*Modal left*/}
                            <AnimatePresence>
                              {selectedItem?.title === item.title && (
                                <div
                                  className={`w-[47%] bg-gradient-to-bl from-white to-indigo-300 shadow-lg p-6 rounded-md z-10 ${
                                    selectedItem?.title === item.title
                                      ? ""
                                      : selectedItem
                                      ? "blur-sm"
                                      : ""
                                  }`}
                                >
                                  <h3 className="text-xl font-semibold mb-1">
                                    {item.title}
                                  </h3>
                                  {item.date && (
                                    <p className="text-sm text-gray-500 mb-2">
                                      {item.date}
                                      <AnimatePresence>
                                        {selectedItem?.title === item.title && (
                                          <motion.span
                                            initial={{ opacity: 0, x: 5 }}
                                            animate={{ opacity: 1, x: 0 }}
                                            exit={{ opacity: 0, x: 5 }}
                                            transition={{ duration: 0.3 }}
                                            className="ml-1"
                                          >
                                            | {item.showDate}
                                          </motion.span>
                                        )}
                                      </AnimatePresence>
                                    </p>
                                  )}
                                  <p>{item.description}</p>
                                </div>
                              )}
                            </AnimatePresence>


Useeffect for stopping the scroll on blur
  useEffect(() => {
    if (selectedItem) document.body.style.overflow = "hidden";
    else document.body.style.overflow = "auto";
  }, [selectedItem]);

  
Experience ka completed code
/* 
TODO: Add responsive styles using flex-col on small screens 
*/


import { useState, useEffect, useCallback } from "react";
import { timelineItems } from "../utilities/data";
import { fadeRight, fadeLeft } from "../utilities/constants";
import { motion, AnimatePresence } from "framer-motion";

export default function Experience() {
  
  const [selectedItem, setSelectedItem] = useState(null);

  /*
  *This useEffect is for handelling the escape button click to clear blur
  */

  useEffect(() => {
    const handleEsc = (e) => {
      if (e.key === "Escape") setSelectedItem(null);
    };
    window.addEventListener("keydown", handleEsc);
    return () => window.removeEventListener("keydown", handleEsc);
  }, []);

/* 
* This callback is for handelling the selection of current content-box 
*/
  const handleSelect = useCallback((item) => {
    setSelectedItem(item);
  }, []);

  return (
    <>
      <section
        id="experience"
        className="py-20 text-gray-800 dark:text-blue-500 px-4"
        onClick={(e) => {
          if (selectedItem && !e.target.closest(".selected-item")) {
            setSelectedItem(null);
          }
        }}
      >
        <div className="max-w-6xl mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-16">My Experience</h2>

          {/*Following Animate is for blur effect*/}

          <AnimatePresence>
            {selectedItem && (
              <motion.div
                className="fixed inset-0  bg-opacity-30 z-[30]"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
              />
            )}
          </AnimatePresence>

          <div className="relative">
            
            {/* Following div is for the Vertical Line */}
            
            <div className="absolute left-4 min-[600px]:left-1/2 min-[600px]:transform min-[600px]:-translate-x-1/2 h-full w-1 bg-indigo-600 z-30"></div>

            {/* Following div is for all the timeline items and card */}

            <div className="space-y-16">
              {timelineItems.map((item, index) => {
                const isLeft = index % 2 === 0;

                return (
                  <motion.div
                    key={index}
                    className="relative min-[600px]:flex flex-row-reverse min-[600px]:flex-row flex items-start justify-end min-[600px]:justify-between z-30"
                    initial="hidden"
                    whileInView="visible"
                    viewport={{ once: false, amount: 0.3 }}
                    variants={isLeft ? fadeRight : fadeLeft}
                  >
                    
                    {/* Left side content */}

                    {isLeft ? (
                      <>
                        
                        {/* Content box */}

                        <motion.div
                          layoutId={item.title}
                          layout
                          onClick={() => handleSelect(item)}
                          className={`w-full min-[600px]:w-[47%]  bg-gradient-to-bl from-white to-indigo-300 dark:from-gray-700 dark:to-gray-800 dark:bg-gradient-to-bl shadow-lg p-6 rounded-md cursor-pointer z-30 ${
                            selectedItem?.title === item.title
                              ? ""
                              : selectedItem
                              ? "blur-sm"
                              : ""
                          }`}
                          transition={{
                            layout: { duration: 0.3, ease: "easeInOut" },
                          }}
                        >
                          <h3 className="text-xl font-semibold mb-1">
                            {item.title}
                          </h3>
                          {item.date && (
                            <p className="text-md text-gray-500 dark:text-white mb-2">
                              {item.date}
                              <AnimatePresence>
                                {selectedItem?.title === item.title && (
                                  <motion.span
                                    initial={{ opacity: 0, x: 5 }}
                                    animate={{ opacity: 1, x: 0 }}
                                    exit={{ opacity: 0, x: 5 }}
                                    transition={{ duration: 0.3 }}
                                    className="ml-1"
                                  >
                                    | {item.showDate}
                                  </motion.span>
                                )}
                              </AnimatePresence>
                            </p>
                          )}
                          <p>
                            {selectedItem?.title !== item.title && (
                              <motion.span
                                initial={{ opacity: 0, x: 5 }}
                                animate={{ opacity: 1, x: 0 }}
                                exit={{ opacity: 0, x: 5 }}
                                transition={{ duration: 0.3 }}
                                className="ml-1"
                              >
                                {item.description}
                              </motion.span>
                            )}
                          </p>

                          {/* * Show detailedDescription if selected */}
                          {selectedItem?.title === item.title && (
                            <motion.div
                              layout
                              initial={{ opacity: 0, y: 10 }}
                              animate={{ opacity: 1, y: 0 }}
                              exit={{ opacity: 0, y: 10 }}
                              transition={{
                                layout: { duration: 0.3, ease: "easeInOut" },
                              }}
                              className="mt-4 text-md text-gray-700 dark:text-white whitespace-pre-line"
                            >
                              {item.detailedDescription}
                            </motion.div>
                          )}
                        </motion.div>

                        {/* Center line and dot */}
                        <div className="w-[6%] top-10 relative flex justify-center items-start">
                          <div className="w-6 h-6 ml-0.5 bg-indigo-600 rounded-full border-4 border-white absolute top-4"></div>
                        </div>

                        {/* Show Date on right */}
                        <div className="w-[47%] hidden min-[600px]:flex items-start justify-start pt-1">
                          <p
                            className={`text-xl pt-12 ${
                              selectedItem?.title === item.title
                                ? ""
                                : selectedItem
                                ? "blur-sm"
                                : ""
                            } text-gray-600 dark:text-white`}
                          >
                            <AnimatePresence>
                              {selectedItem?.title !== item.title && (
                                <motion.span
                                  initial={{ opacity: 0, x: -5 }}
                                  animate={{ opacity: 1, x: 0 }}
                                  exit={{ opacity: 0, x: -5 }}
                                  transition={{ duration: 0.3 }}
                                  className="ml-1 "
                                >
                                  {item.showDate}
                                </motion.span>
                              )}
                            </AnimatePresence>
                          </p>
                        </div>
                      </>
                    ) : (
                      <>
                        {/* Show Date on left */}
                        <div className="w-[47%] flex items-start justify-end pt-1">
                          <p
                            className={`text-xl pt-12 ${
                              selectedItem?.title === item.title
                                ? ""
                                : selectedItem
                                ? "blur-sm"
                                : ""
                            } text-gray-600 dark:text-white`}
                          >
                            <AnimatePresence>
                              {selectedItem?.title !== item.title && (
                                <motion.span
                                  initial={{ opacity: 0, x: -5 }}
                                  animate={{ opacity: 1, x: 0 }}
                                  exit={{ opacity: 0, x: -5 }}
                                  transition={{ duration: 0.3 }}
                                  className="ml-1"
                                >
                                  {item.showDate}
                                </motion.span>
                              )}
                            </AnimatePresence>
                          </p>
                        </div>

                        {/* Center line and dot */}
                        <div className="w-[6%] top-10 relative flex justify-center items-start">
                          <div className="w-6 h-6 bg-indigo-600 rounded-full border-4 border-white absolute top-4"></div>
                        </div>

                        {/* Content box */}
                        <div
                          onClick={() => handleSelect(item)}
                          className={`w-[47%] bg-gradient-to-br from-white to-indigo-300 dark:from-gray-700 dark:to-gray-800 dark:bg-gradient-to-br shadow-lg p-6 rounded-md cursor-pointer z-30 ${
                            selectedItem?.title === item.title
                              ? ""
                              : selectedItem
                              ? "blur-sm"
                              : ""
                          }`}
                        >
                          <h3 className="text-xl font-semibold mb-1">
                            {item.title}
                          </h3>
                          {item.date && (
                            <p className="text-md text-gray-500 dark:text-white mb-2">
                              {item.date}
                              <AnimatePresence>
                                {selectedItem?.title === item.title && (
                                  <motion.span
                                    initial={{ opacity: 0, x: 5 }}
                                    animate={{ opacity: 1, x: 0 }}
                                    exit={{ opacity: 0, x: 5 }}
                                    transition={{ duration: 0.3 }}
                                    className="ml-1"
                                  >
                                    | {item.showDate}
                                  </motion.span>
                                )}
                              </AnimatePresence>
                            </p>
                          )}
                          <p>
                            {selectedItem?.title !== item.title && (
                              <motion.span
                                initial={{ opacity: 0, x: 5 }}
                                animate={{ opacity: 1, x: 0 }}
                                exit={{ opacity: 0, x: 5 }}
                                transition={{ duration: 0.3 }}
                                className="ml-1"
                              >
                                {item.description}
                              </motion.span>
                            )}
                          </p>

                          {/* 👉 Show detailedDescription if selected */}
                          {selectedItem?.title === item.title && (
                            <motion.div
                              initial={{ opacity: 0, y: 10 }}
                              animate={{ opacity: 1, y: 0 }}
                              exit={{ opacity: 0, y: 10 }}
                              transition={{ duration: 0.3 }}
                              className="mt-4 text-md text-gray-700 dark:text-white"
                            >
                              {item.detailedDescription}
                            </motion.div>
                          )}
                        </div>
                      </>
                    )}
                  </motion.div>
                );
              })}
            </div>
          </div>
        </div>
      </section>
    </>
  );
}



 // useEffect(() => {
  //   const media = window.matchMedia('(prefers-color-scheme: dark)');

  //   const systemThemeChangeHandler = () => {
  //     if (mode === 'system') {
  //       applyTheme('system');
  //     }
  //   };

  //   if (mode === 'system') {
  //     media.addEventListener('change', systemThemeChangeHandler);
  //   }

  //   return () => {
  //     media.removeEventListener('change', systemThemeChangeHandler);
  //   };
  // }, [mode]);